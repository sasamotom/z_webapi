@use "../abstracts" as *;

html {
  @include mq(pc) {
    // サイト全体をスクロールスナップ有効にし、スクロールが二重に出ないようにするにはhtmlに設定を記載する
    scroll-snap-type: y mandatory;
    height: calc((var(--vh, 1vh) * 100));
    overflow: auto;
  }
}

// アンカーリンク一覧
.ancLinks {
  position: fixed;
  top: clamp(4vh, 10vw, 8rem);
  left: 2rem;
  z-index: 1;
  display: flex;
  flex-direction: column;
  gap: 1.4rem;
  width: 2rem;
  @include mq() {
    top: 2rem;
    flex-direction: row;
    align-items: center;
  }
  > li {
    margin: 0 auto;
    @include mq() {
      margin: 0;
    }
  }
  a {
    display: block;
    width: 1.2rem;
    height: 1.2rem;
    background: $colorText;
    border-radius: 50%;
    &.-active {
      width: 1.8rem;
      height: 1.8rem;
      background: #fff;
      border: 4px solid $colorText;
    }
  }
  span {
    display: none;
  }
}

// セクション
.secCard {
  scroll-snap-align: start;
  scroll-snap-stop: always;
  position: relative;
  z-index: 0;
  display: flex;
  flex-direction: row-reverse;
  gap: 10%;
  align-items: flex-start;
  justify-content: center;
  height: calc((var(--vh, 1vh) * 100));
  padding: clamp(5vh, 11vw, 10rem) 4rem;
  overflow: hidden;
  @include mq() {
    display: block;
    height: auto;
    padding: 5rem 5%;
  }
  &::before {
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    display: block;
    width: 100%;
    height: 100%;
    content: "";
  }
  > * {
    flex-grow: 0;
    max-width: 700px;
  }
  &:nth-of-type(5n + 1) {
    @include setColor($color01, $color02, -0.06em);
  }
  &:nth-of-type(5n + 2) {
    @include setColor($color03, $color04, 100%);
    .secCard_ttl {
      transform: translateX(-100%);
      @include mq() {
        transform: none;
      }
    }
    .apiContainer {
      &::before {
        left: -10%;
        width: 100%;
        height: 150%;
      }
    }
  }
  &:nth-of-type(5n + 3) {
    @include setColor($color05, $color01, 100%);
    .secCard_ttl {
      transform: translateX(-110%);
      @include mq() {
        transform: none;
      }
    }
    .apiContainer {
      &::before {
        top: -15%;
        left: 30%;
        width: 80%;
        height: 130%;
      }
    }
  }
  &:nth-of-type(5n + 4) {
    @include setColor($color02, $color03, 0.03em);
    .apiContainer {
      &::before {
        top: -5%;
        left: -10%;
        height: 130%;
      }
    }
  }
  &:nth-of-type(5n + 5) {
    @include setColor($color04, $color05, 100%);
    .secCard_ttl {
      transform: translateX(-130%);
      @include mq() {
        transform: none;
      }
    }
    .apiContainer {
      &::before {
        top: -5%;
        left: 30%;
        width: 90%;
        height: 140%;
      }
    }
  }
  &:nth-of-type(2n) {
    flex-direction: row;
  }
  &_ttl {
    position: absolute;
    bottom: -0.1em;
    z-index: 2;
    font-family: $fontEn;
    font-size: min(20vh, 14vw);
    color: #fff;
    letter-spacing: -0.015em;
    transition: 1s 0.5s text-shadow;
    -webkit-text-stroke: 4px $colorText;
    @include mq() {
      position: static;
      font-size: 25vw;
    }
  }
  .textContainer {
    position: relative;
    top: 10vh;
    z-index: 3;
    width: 40%;
    height: 100%;
    transition: 0.5s top;
    @include mq() {
      width: 100%;
      margin-top: 4rem;
    }
    &_inner {
      height: 100%;
      padding: 1em;
      overflow-y: auto;
    }
    &_ttl {
      @include fontSize(24, 20);
      margin-bottom: 1em;
      font-weight: 900;
    }
    p {
      @include fontSize(16, 14);
    }
    * + .textContainer_ttl {
      margin-top: 2em;
    }
  }
  .apiContainer {
    position: relative;
    top: 10vh;
    width: 58%;
    aspect-ratio: 1;
    background: #fff;
    border: 4px solid $colorText;
    transition: 0.5s top, 1s 0.5s box-shadow;
    @include mq() {
      width: 100%;
      margin-top: 3rem;
    }
    &::before {
      position: absolute;
      top: -5%;
      left: 20%;
      z-index: -1;
      display: block;
      width: 90%;
      height: 120%;
      content: "";
      background: #fff;
    }
    &_inner {
      height: 100%;
      overflow-y: auto;
    }
    &_ttl {
      @include fontSize(34, 24);
      position: relative;
      margin-bottom: 1em;
      font-family: $fontEn;
      font-weight: 900;
      span {
        @include fontSize(22, 16);
        position: absolute;
        top: 80%;
        left: 10%;
        font-family: $fontEn;
        color: #fff;
        -webkit-text-stroke: 1px $colorText;
      }
    }
  }
  // アニメーション
  &.-active {
    &::before {
      animation: fromBottom 0.5s;
    }
    .secCard_ttl {
      animation: fromRightForTitle 0.5s;
    }
    .textContainer {
      top: 0;
    }
    .apiContainer {
      top: 0;
      animation: fromRight 0.5s;
      &::before {
        animation: fromRight_Reversal 0.5s;
      }
    }
  }
}

@keyframes fromBottom {
  0% {
    top: 100%;
  }
  100% {
    top: 0;
  }
}
@keyframes fromRight {
  0% {
    left: 200px;
  }
  100% {
    left: 0;
  }
}
@keyframes fromRight_Reversal {
  0% {
    transform: translateX(-200px);
  }
  100% {
    transform: none;
  }
}
@keyframes fromRightForTitle {
  0% {
    transform: translateX(100vw);
  }
  40% {
    transform: translateX(100vw);
  }
  100% {
    transform: 0;
  }
}

input[type="text"] {
  border: 4px solid $colorText;
}

// ここから各APIに対応したスタイル
.secWeather {
  .weatherDataContainer {
    display: flex;
    flex-wrap: wrap;
    gap: clamp(1rem, 2vw, 4rem) clamp(1rem, 2vw, 2rem);
    align-items: flex-start;
    justify-content: center;
    &.-openMeteo {
      .weatherInfo {
        @include mq() {
          width: 26%;
          &:nth-child(n + 6) {
            display: none;
          }
        }
        &:nth-child(1),
        &:nth-child(2) {
          width: 39%;
          @include mq() {
            width: 36%;
          }
          .weatherInfo {
            &_date {
              @include fontSize(24, 16);
            }
            &_max,
            &_min {
              @include fontSize(20, 12);
            }
          }
        }
      }
    }
    &.-jma {
      .weatherInfo {
        width: 28%;
        &_date {
          @include fontSize(28, 16);
        }
        &:nth-child(1) {
          .weatherInfo_max,
          .weatherInfo_min {
            display: none;
          }
        }
      }
      p {
        @include fontSize(14, 10);
        padding: 1em;
      }
    }
    &.-openWeather {
      .weatherInfo {
        width: 75%;
        &_code {
          span {
            @include fontSize(28, 16);
          }
        }
        &_max,
        &_min {
          @include fontSize(24, 14);
        }
      }
    }
  }
  .weatherInfo {
    display: flex;
    flex-grow: 0;
    flex-wrap: wrap;
    width: 16%;
    font-family: $fontEn;
    &:nth-child(1),
    &:nth-child(2) {
      .weatherInfo_date {
        position: relative;
        &::before {
          position: absolute;
          top: 50%;
          left: 95%;
          font-size: 60%;
          color: #fff;
          content: "today";
          -webkit-text-stroke: 1px $colorText;
        }
      }
    }
    &:nth-child(2) {
      .weatherInfo_date {
        &::before {
          content: "tomorrow";
        }
      }
    }

    &_date {
      @include fontSize(18, 14);
    }
    &_code {
      position: relative;
      width: 100%;
      aspect-ratio: 1;
      margin: 0 auto;
      margin-top: 0.5rem;
      border: 1px solid #aaa;
      &::before {
        position: absolute;
        top: 50%;
        left: 50%;
        display: block;
        width: 100%;
        font-size: 1rem;
        color: #aaa;
        text-align: center;
        content: "ここに天気のアイコン";
        transform: translate(-50%, -50%);
      }
      span {
        @include fontSize(12, 10);
        position: absolute;
        bottom: 0.5em;
        left: 0;
        display: block;
        width: 100%;
      }
    }
    &_max,
    &_min {
      margin-top: 0.2em;
      font-size: 1.4rem;
      @include fontSize(14, 10);
      span {
        font-size: 70%;
      }
    }
    &_min {
      &::before {
        display: inline-block;
        padding: 0 0.2em;
        content: "-";
      }
    }
  }
}

.secWiki {
  .apiContainer_inner {
    display: flex;
    flex-direction: column;
    height: 100%;
  }
  .fixedContainer {
    flex-grow: 0;
    flex-shrink: 0;
    padding: 3rem 4rem;
    .apiContainer_ttl {
      margin-bottom: 0.8em;
    }
  }
  .swiper {
    width: 100%;
  }
  .inputArea {
    .row {
      display: flex;
      flex-wrap: wrap;
      margin-top: 0.3rem;
    }
    label {
      @include fontSize(18, 14);
      margin-right: 0.8rem;
      font-family: $fontEn;
    }
    input {
      display: inline-block;
      max-width: 80rem;
      padding: 0.2em;
      background: #fff;
    }
    .btn {
      display: inline-block;
      padding: 0;
      margin-top: 0;
      margin-left: 0.8rem;
      > * {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        height: 100%;
      }
    }
  }
  .resultKindName {
    @include fontSize(26, 20);
    font-weight: 900;
  }
  .resultArea {
    margin-top: 2rem;
    &_key {
      @include fontSize(22, 18);
      font-weight: 900;
    }
    .wikiResultArticle {
      * {
        margin-top: 1em;
        line-height: 1.5;
      }
      span {
        font-weight: inherit;
      }
      h2,
      h3,
      h4,
      h5 {
        font-size: 120%;
        font-weight: 900;
      }
      dl {
        dt {
          font-weight: 900;
        }
        dd {
          margin-top: 0.2em;
        }
      }
      ul {
        li {
          margin-top: 0.2em;
          &::before {
            content: "・";
          }
          ul {
            padding-left: 1em;
            margin-top: 0.2em;
          }
        }
      }
      a {
        color: #888;
        text-decoration: underline;
      }
    }
    .wikiResultList {
      > li {
        padding: 1em 0;
        dt {
          @include fontSize(16, 14);
          font-weight: 900;
        }
        dd {
          margin-top: 0.2em;
          @include fontSize(14, 12);
          line-height: 1.3;
        }
        + li {
          border-top: 1px solid $color04;
        }
      }
      .searchmatch {
        display: inline-block;
        padding: 0.1em 0;
        font-weight: 900;
        background: rgba($color04, 0.3);
      }
    }
  }
}
